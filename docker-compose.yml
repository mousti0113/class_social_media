version: '3.8'
services:
  # Database MySQL
  mysql:
    image: mysql:8.4
    container_name: class_social_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword123}
      MYSQL_DATABASE: class_social_db
      MYSQL_USER: ${MYSQL_USER:-socialuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-socialpass123}
      TZ: Europe/Rome
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - class_social_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max_connections=200
      - --innodb_buffer_pool_size=256M

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: class_social_backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_PROFILE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/class_social_db?useSSL=false&serverTimezone=Europe/Rome&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-socialuser}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-socialpass123}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: ${SHOW_SQL:-false}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-this-in-production}
      MAX_FILE_SIZE: 10MB
      MAX_REQUEST_SIZE: 10MB
      UPLOAD_DIR: /app/uploads
      CORS_ALLOWED_ORIGINS: http://localhost,http://localhost:4200,http://localhost:80,http://frontend
    ports:
      - "8080:8080"
    volumes:
      - uploads_data:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - class_social_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: class_social_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - class_social_network
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s 




networks:
  class_social_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
  